[{"C:\\Iara\\ecommerse-coderhouse\\src\\index.js":"1","C:\\Iara\\ecommerse-coderhouse\\src\\reportWebVitals.js":"2","C:\\Iara\\ecommerse-coderhouse\\src\\App.js":"3","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemDetailContainer\\ItemDetailContainer.js":"4","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemListContainer\\ItemListContainer.js":"5","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\CartWidget\\CartWidget.js":"6","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\NavBar\\NavBar.js":"7","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemList\\ItemList.js":"8","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemDetail\\ItemDetail.js":"9","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Item\\Item.js":"10","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemCount\\Count.js":"11","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Cart\\Cart.js":"12","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Firebase\\index.js":"13","C:\\Iara\\ecommerse-coderhouse\\src\\Context\\CartContext.js":"14","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Loading\\Loading.js":"15","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Modal\\CartModal.js":"16","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\CartContainer\\CartContainer.js":"17","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Button\\AddButton.js":"18","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\HomeContainer\\HomeContainer.js":"19","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\HomeContainer\\Home.js":"20","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\MainImg\\MainImg.js":"21","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ShopContainer\\ShopContainer.js":"22"},{"size":500,"mtime":1611842065094,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":1222,"mtime":1613573051036,"results":"26","hashOfConfig":"24"},{"size":3116,"mtime":1613574304685,"results":"27","hashOfConfig":"24"},{"size":2760,"mtime":1613576368633,"results":"28","hashOfConfig":"24"},{"size":873,"mtime":1613577066422,"results":"29","hashOfConfig":"24"},{"size":1052,"mtime":1613577702496,"results":"30","hashOfConfig":"24"},{"size":579,"mtime":1613516078485,"results":"31","hashOfConfig":"24"},{"size":2334,"mtime":1613577596145,"results":"32","hashOfConfig":"24"},{"size":595,"mtime":1613578214492,"results":"33","hashOfConfig":"24"},{"size":1795,"mtime":1613577506134,"results":"34","hashOfConfig":"24"},{"size":9500,"mtime":1613578114304,"results":"35","hashOfConfig":"24"},{"size":543,"mtime":1613573248537,"results":"36","hashOfConfig":"24"},{"size":402,"mtime":1613573293955,"results":"37","hashOfConfig":"24"},{"size":322,"mtime":1612825255598,"results":"38","hashOfConfig":"24"},{"size":2630,"mtime":1612825258011,"results":"39","hashOfConfig":"24"},{"size":217,"mtime":1613573333314,"results":"40","hashOfConfig":"24"},{"size":712,"mtime":1613576441455,"results":"41","hashOfConfig":"24"},{"size":202,"mtime":1613566818956,"results":"42","hashOfConfig":"24"},{"size":222,"mtime":1613577223676,"results":"43","hashOfConfig":"24"},{"size":367,"mtime":1613566404189,"results":"44","hashOfConfig":"24"},{"size":294,"mtime":1613576175890,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"aylf5j",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Iara\\ecommerse-coderhouse\\src\\index.js",[],["101","102"],"C:\\Iara\\ecommerse-coderhouse\\src\\reportWebVitals.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\App.js",["103","104","105","106","107"],"import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar1 from './Components/NavBar/NavBar';\nimport Home from './Components/HomeContainer/Home'\nimport { useState } from 'react';\nimport { Fragment } from 'react';\nimport HomeContainer from './Components/HomeContainer/HomeContainer'\nimport ShopContainer from './Components/ShopContainer/ShopContainer'\nimport ItemDetailContainer from './Components/ItemDetailContainer/ItemDetailContainer';\nimport CartContainer from './Components/CartContainer/CartContainer'\nimport {CartProvider} from './Context/CartContext'\nimport CartWidget from './Components/CartWidget/CartWidget'\nimport CartContext from '././Context/CartContext'\n\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <CartContext>\n      <BrowserRouter>\n        <Navbar1 />\n        <Switch>\n          <Route exact path='/'> <HomeContainer /> </Route>\n          <Route exact path=\"/\"> <ShopContainer /> </Route>\n          <Route path=\"/item/:id\"> <ItemDetailContainer /> </Route>\n          <Route path=\"/cart\"> <CartContainer /> </Route>\n        </Switch>\n      </BrowserRouter>\n      </CartContext>\n    </div>\n  );\n}\n\nexport default App;\n\n","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemDetailContainer\\ItemDetailContainer.js",["108"],"import React, { useState, useEffect } from 'react';\r\nimport ItemDetail from '../ItemDetail/ItemDetail';\r\nimport { getFirestore} from '../Firebase/index'\r\nimport { useParams } from 'react-router-dom';\r\nconst items = [\r\n    {\r\n        id: 1,\r\n        title: \"collar pequeño\",\r\n        description: \"collar para razas mini y medianas\",\r\n        price: 270,\r\n        stock: 10,\r\n        perfilter: \"perros\",\r\n        imgUrl : 'https://i.imgur.com/X5GQCBP.jpg'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"piedras para gatos\",\r\n        description: \"piedras para gatos por 5 kg\",\r\n        price: 500,\r\n        stock: 30,\r\n        perfilter: \"gatos\",\r\n        imgUrl: 'https://i.imgur.com/bqbVitJ.jpg'\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        title: \"correa extensible\",\r\n        description: \"correa extensible 10 metros\",\r\n        price: 700,\r\n        stock: 40,\r\n        perfilter: \"perros\",\r\n        imgUrl: 'https://i.imgur.com/XyfxJFl.jpg'\r\n    },\r\n];\r\n\r\n\r\nconst ItemDetailContainer = () => {\r\n    \r\n    const [Loading, setLoading] = useState(false);\r\n    const {itemId} = useParams(); \r\n    const [itemSelected, setItemSelected] = useState(); //en setItem guardo en estado local lo que me traigo de db\r\n    console.log(itemSelected);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        const db = getFirestore();\r\n        const itemsCollection = db.collection('items'); //acá llamo a mi colección\r\n        const item = itemsCollection.doc(itemId.id); // (id)\r\n        \r\n        item.get().then((doc) => {\r\n            if (!doc.exists) {\r\n                console.log('El producto no existe');\r\n                return;\r\n            }\r\n            console.log('Producto encontrado:');   //guardo en setitems un obj\r\n            setItemSelected({ id: doc.id, ...doc.data() });\r\n        }).catch((error)=>{\r\n            console.log('Error en la búsqueda', error);\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        })\r\n    },[itemId]) //se queda escuchando a ID\r\n\r\n    return (\r\n        <div className='row justify-content-center'>\r\n            {\r\n                Loading && <h3>Cargando..</h3>\r\n            }\r\n               <ItemDetail item={itemSelected}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemDetailContainer;\r\n\r\n/*\r\n\r\n\r\n    // const [item, setItem]= useState({}); \r\n    //    const [cartItems, setCartItems] = useContext(useContext)\r\n    \r\n    useEffect(() => {\r\n        const database = getFirestore()\r\n        const itemDatabase= database.collection('items');//acá llamo a mi colección\r\n        const item = itemDatabase.doc(itemId.id) //el ID que me trae useParams\r\n\r\n        item.get()\r\n        .then((doc) =>{\r\n            if(!doc.exist){\r\n                console.log(\"no existe el documento\");\r\n                return;\r\n            }\r\n            setSelectedItem({id: doc.id, ...doc.data() }); //guardo en setitems un obj\r\n        })\r\n        .catch((e) => console.log(`ocurrió un error: ${e}`))//para traerme los datos siempre get. porque es una promesa\r\n        //catch para posibles errores\r\n    }, [itemId] ) //se queda escuchando a ID\r\n\r\n    );\r\n};\r\n\r\n\r\n*/","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemListContainer\\ItemListContainer.js",["109"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Item from '../Item/Item'\r\nimport './ItemListContainer.css'\r\nimport { getFirestore } from '../Firebase/index'\r\n\r\nconst ItemListContainer = () => {\r\n    const [loading , setLoading] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const db = getFirestore();\r\n        const itemCollection = db.collection('items');\r\n        itemCollection.get().then((querySnapshot) => {\r\n            if(querySnapshot.size === 0) {\r\n                return (\r\n                    <h2>Estamos teniendo problemas para cargar nuestros productos. Por favor, intenta nuevamente.</h2>\r\n                )\r\n            }\r\n            setItems(querySnapshot.docs.map(doc => ({\r\n                ...doc.data(), id: doc.id  })));\r\n        }).catch((error) => {\r\n            console.log('Error en la búsqueda de productos', error);\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className='row justify-content-center text-center'>\r\n            <div className='col-1 2mt-4'>\r\n                <h2>Sin Pulguitas - PetShop</h2>\r\n                {\r\n                    loading && <h3>Cargando..</h3>\r\n                }\r\n            </div>\r\n                {items.length && items.map(item => (\r\n                  <Item price={item.price} image={item.imgUrl} id={item.id}/>\r\n                ))                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemListContainer;\r\n\r\n/*\r\nconst ItemListContainer = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [displayingItems, setDisplayingItems] = useState();\r\n    const [items, setItems] = useState([]);\r\n    const {categoryId} = useParams();\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let database = getFirestore();\r\n        let query;\r\n        if (categoryId.id) {\r\n            query = database\r\n            .collection('items')\r\n            .where('category', '==', categoryId.id);\r\n        } else {\r\n            query = database.collection('items');\r\n        }\r\n        query.get().then((querySnapshot) => {\r\n            let itemsArray = querySnapshot.docs.map((item) =>{\r\n                return {\r\n                    ...item.data(),\r\n                    id: item.id,\r\n\r\n                };\r\n            });\r\n            setDisplayingItems(itemsArray);\r\n            setLoading(false);\r\n        });\r\n    }, [categoryId]);\r\n\r\n    return(\r\n        <>\r\n           <ItemList\r\n            loading={loading}\r\n            items={displayingItems}\r\n            category={categoryId}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemListContainer\r\n\r\n*/","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\CartWidget\\CartWidget.js",["110","111"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport {Context} from '../../Context/CartContext';\r\n\r\nconst CartWidget = () => {\r\n  const [selectedItems] = useContext(Context);\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  useEffect(()=> {\r\n    let fullAmount = 0;\r\n    if(selectedItems.length > 0) {\r\n        selectedItems.map(item => (\r\n            fullAmount += item.inCart\r\n        ))\r\n        setAmount(fullAmount);\r\n    }\r\n}, [selectedItems])\r\n\r\n  return (\r\n      <a className=\"nav-link\" href=\"#\">\r\n        <span className=\"badge badge-pill badge-light\">{amount}</span>\r\n        <FontAwesomeIcon icon={faShoppingCart} />\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default CartWidget;\r\n\r\n","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\NavBar\\NavBar.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemList\\ItemList.js",[],["112","113"],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemDetail\\ItemDetail.js",["114","115","116","117","118"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport Count from '../ItemCount/Count'\r\nimport \"./ItemDetail.css\"\r\n\r\n\r\nexport default function ItemDetail ({item}) {\r\n\r\n  return (\r\n  <div className='col-12 d-flex flex-row justify-content-center p-4'>\r\n      {\r\n          item && \r\n          (<div>\r\n          <img src={item.imgUrl} className=\"card-img-top img-fluid\" alt=\"Imagen del producto\"></img>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{item.title}</h5>\r\n            <h6>{item.description}</h6>\r\n            <p className=\"card-text mt-2\">{item.price}$</p>\r\n            <Count max=\"15\" min=\"1\" imagen={item.imgUrl} price={item.price} title={item.title}/>\r\n          </div>\r\n          </div>)\r\n      }\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n/*\r\nconst ItemDetail = ({ loading, item, handleButton, buttonVisibility, count, setCount }) => {\r\n\r\n    const context = useContext(CartContext);\r\n    \r\n    const handleCount = count => {\r\n        setCount(count)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          {loading ? (\r\n            <div className=\"loading loading-lg\"></div>\r\n          ) : item === 404 ? (\r\n            <div>\r\n              <h1>404</h1>\r\n              <h3>Item no encontrado.</h3>\r\n              <Link to=\"/\">\r\n                <button className=\"btn btn-primary\">Volver</button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n                <img src={item.imgUrl} alt={item.title} />\r\n              <div>\r\n                <h2>{item.title}</h2>\r\n                <b>Precio: ${item.price}</b>\r\n                <i>Stock Disponible: {item.stock}</i>\r\n                <Count\r\n                  initial={0}\r\n                  stock={item.stock}\r\n                  handleButton={handleButton}\r\n                  count={count}\r\n                  setCount={setCount}\r\n                />\r\n    \r\n                <Link\r\n                  to=\"/cart\"\r\n                  className={`btn btn-primary ${!buttonVisibility && 'disabled'}`}\r\n                  onClick={() => context.addItem(item, count)}\r\n                >\r\n                  Agregar al Carrito\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    };\r\n\r\n    export default ItemDetail;\r\n\r\n    */\r\n","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Item\\Item.js",["119"],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ItemCount\\Count.js",["120"],"import React, {useState, useEffect} from 'react';\r\nimport \"./Count.css\"\r\nimport AddButton from '../../Components/Button/AddButton'\r\n\r\nconst ItemCount = (props) => {\r\n\r\n  const [count, setCount] = useState(1);\r\n\r\n  function onAdd(simb) {\r\n      if ((simb === '+') && (count < props.max)) {\r\n          setCount(count+1);\r\n      } else if ((simb === '-') && (count > props.min)) {\r\n          setCount(count-1);\r\n      } \r\n  }\r\n  \r\n\r\n  return (\r\n      <div style= {{display: 'flex', alignItems: 'center'}}>\r\n        <div className=\"counter-container d-flex flex-row justify-content-around align-items-center shadow mt-3\">\r\n          <button className=\"btn\" onClick={() => onAdd('-')}> - </button> \r\n          <p className=\"count\"> {count} </p>\r\n          <button className=\"btn\" onClick={() => onAdd('+')}> + </button>\r\n        </div>\r\n        <AddButton itemCount={count} imagen={props.imgUrl} title={props.title} price={props.price}/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ItemCount;\r\n\r\n\r\n/*\r\n\r\nconst Count = ({initial, stock, onAdd, count, setCount, handleButton}) => { \r\n  \r\n  useEffect(() => {\r\n    handleButton(count);},\r\n    [count]\r\n  );\r\n\r\n  const add =()=> {\r\n      count < stock && setCount(count + 1);\r\n  };\r\n\r\n  const remove =()=> {\r\n      count > initial && setCount(count-1);\r\n  };\r\n\r\n const handleClick = () => {\r\n    onAdd(count)\r\n      }; \r\n\r\n\r\n      return(\r\n        <>\r\n    \r\n        \r\n        <div style= {{display: 'flex', alignItems: 'center'}}>\r\n        <button onClick= {remove}> - </button>\r\n        <p>{count}</p>\r\n        <button onClick= {add}> + </button>\r\n        </div>\r\n        <button disabled={count < 1} onClick= {handleClick}> \r\n        {\" \"}\r\n        Agregar {count} {\" \"} \r\n        </button>\r\n        </>\r\n      )\r\n    ;}\r\n     \r\nexport default Count;\r\n\r\n*/","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Cart\\Cart.js",["121","122","123","124"],"import React, { useState, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { useContext } from 'react';\r\nimport { Context } from '../../Context/CartContext'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { getFirestore } from '../Firebase/index';\r\nimport \"./Cart.css\";\r\n\r\nconst Cart = () => {\r\n    \r\n  const [selectedItems, setSelectedItems] = useContext(Context);\r\n  const [amount, setAmount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderId, setOrderId] = useState('');\r\n  const [total, setTotal] = useState(0)\r\n\r\n\r\n  useEffect(()=> {\r\n      let fullAmount = 0;\r\n      if(selectedItems.length > 0) {\r\n          selectedItems.map(item => (\r\n              fullAmount += item.inCart\r\n          ))\r\n          setAmount(fullAmount);\r\n      }\r\n  }, [selectedItems])\r\n\r\n\r\n  useEffect(()=> { //total monto\r\n      let fullPay = 0;\r\n      if(selectedItems.length > 0) {\r\n          selectedItems.map(item => (\r\n              fullPay += item.price * item.inCart\r\n          ))\r\n          setTotal(fullPay);\r\n      }\r\n  }, [selectedItems])\r\n\r\n  const addOrder = () => {\r\n      if(document.getElementById('form-email').value === document.getElementById('check-email').value) {\r\n          setLoading(true);\r\n\r\n          const db = getFirestore();        \r\n          const orders = db.collection('orders');\r\n\r\n          const newOrder = {\r\n              buyer: {\r\n                  name: document.getElementById('form-name').value,\r\n                  phone: document.getElementById('form-phone').value,\r\n                  email: document.getElementById('form-email').value,\r\n                  address: document.getElementById('form-address').value\r\n                  },\r\n              items: selectedItems,\r\n              total: total,\r\n              date: firebase.firestore.Timestamp.fromDate(new Date())\r\n          };\r\n          \r\n          orders.add(newOrder)\r\n              .then(({ id }) => {\r\n                  setOrderId(id);\r\n              }).catch((error) => {\r\n                  console.log(error)\r\n              }).finally(() => {\r\n                  setLoading(false);\r\n              });\r\n      } else {\r\n          document.getElementById('check-label').style.display = 'block'\r\n      }\r\n  }\r\n\r\n\r\n  const Reload = () => {\r\n      window.location.reload();\r\n  }\r\n\r\n\r\n  if(orderId !== '') {\r\n      return (\r\n          <div className=\"row order_container text-center\">\r\n              <div className=\"col-12 p-5\">\r\n                  <h1>Tu compra se realizó exitosamente</h1>\r\n                  <h2>Preparando tu compra</h2>\r\n                  <h3>El ID de seguimiento de tu compra es: <span className='badge'>{orderId}</span></h3>\r\n                  <button onClick={Reload}>Volver</button>\r\n              </div>\r\n          </div>\r\n      )\r\n  }\r\n\r\n  return (\r\n      <div className='col-12 text-center mt-3 cart_container'>\r\n          <h3>Cart</h3>\r\n          {selectedItems.length > 0 ? selectedItems.map((item) => (\r\n                  <div className='mt-4'>\r\n                      <div className='d-flex flex-row justify-content-around'>\r\n                          <h3 className='itemTitle'>{item.title}</h3>\r\n                          <h4>${item.price}</h4>\r\n                          <p className='badge'>{item.inCart}</p>\r\n                          <button onClick={Reload} > Vaciar carrito </button>\r\n                      </div>  \r\n                      <hr></hr>\r\n                  </div>\r\n              )): <div className='col-12 text-center empty_cart-container'>\r\n                   <h3>No hay productos en tu carrito</h3> \r\n                  <Link to={`/home`}>Volver a la tienda</Link>\r\n                  </div>\r\n          }\r\n          <div className='row'>\r\n              <div className='col-12 checkout_container mb-4'>\r\n                  <h3>Checkout</h3>\r\n                  <form>\r\n                  <input className=\"form-control mb-1\" id=\"form-name\" type=\"text\" placeholder=\"Name\" />\r\n                  <input className=\"form-control mb-1\" id=\"form-phone\" type=\"tel\" placeholder=\"Phone\" />\r\n                  <input className=\"form-control mb-1\" id=\"form-email\" type=\"email\" placeholder=\"E-mail\" />\r\n                  <input className=\"form-control mb-1\" id=\"check-email\" type=\"email\" placeholder=\"E-mail\" />\r\n                  <label id=\"check-label\" style={{display:'none'}}>Ambos emails deben ser iguales</label>\r\n                  <input className=\"form-control mb-1\" id=\"form-address\" type=\"text\" placeholder=\"Address\" />\r\n                  </form>\r\n                  <h4 className='mt-4'>Detalles de su orden</h4>\r\n                  <h5>Items: {amount}</h5>\r\n                  <h5>Total: {total}</h5>\r\n                  <button onClick={addOrder} className='m-4'>Terminar compra</button>\r\n              </div>\r\n\r\n          </div>\r\n          \r\n\r\n          \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n\r\n/*\r\nconst Cart = () => {\r\n    const [buyerInfo, setBuyerInfo] = useState();\r\n    const [modal, setModal] = useState(false);\r\n    const [orderId, setOrderId] = useState();\r\n\r\n    useEffect(() => {\r\n        if (buyerInfo) {\r\n            const database = getFirestore();\r\n            const orders = database.collection('orders');\r\n\r\n            const newOrder = {\r\n                buyer: buyerInfo,\r\n                items: context.cart,\r\n                date: firebase.firestore.Timeitem.fromDate(new Date()),\r\n                total: getTotal(), };\r\n\r\n                orders\r\n                .add(newOrder)\r\n                .then(({id}) =>{\r\n                    setOrderId(id);\r\n\r\n                    const itemsUpdate = database.collection('items').where(\r\n                        firebase.firestore.FieldPath.documentId(), 'in', context.cart.map((i) =>\r\n                        i.id)\r\n                    );\r\n                    \r\n                    const updatedStock = async () => {\r\n                        const query = await itemsUpdate.get();\r\n                        const batch = database.batch;\r\n                        query.docs.forEach((docSnapshot, idx) => {\r\n                            batch.update(docSnapshot.ref, {\r\n                                stock: docSnapshot.data().stock - context.cart[idx].quantity,});\r\n                            });\r\n                            batch.commit();\r\n                        };\r\n                        updatedStock();\r\n                    })\r\n\r\n                    .catch((error) => alert('Erorr' + error))\r\n                    .then(() => {\r\n                        setModal(true);\r\n                        setBuyerInfo();\r\n                        context.clearAll();\r\n                    });\r\n                }\r\n            }, [buyerInfo]);\r\n\r\n            const getQuantity = () => {\r\n                let amount = 0;\r\n                context.cart.map((item) => (amount = amount + item.quantity));\r\n                return amount;\r\n            };\r\n\r\n            const getTotal = () => {\r\n                let total = 0;\r\n                context.cart.map((item) => (total = total + item.price * item.quantity));\r\n                return total;\r\n            };\r\n\r\n            return(\r\n                <div>\r\n                <h1>CARRITO</h1>\r\n                {context.cart.length === 0 ? (\r\n                    <div className=\"empty-cart\">\r\n                    <h2>CARRITO VACÍO</h2>\r\n                    <Link to= \"/\">\r\n                    <button className=\"button\">Volver</button>\r\n                    </Link>\r\n                    </div>\r\n                ):(\r\n                    <div className=\"container\">\r\n                    <div>\r\n                      <h2>Datos de su orden</h2>\r\n                      {context.cart.map((item) => (\r\n                        <div key={item.id}>\r\n                          <img src={item.img} alt={item.title} />\r\n                          <div>\r\n                            <h4>{item.title}</h4>\r\n                            <i>{item.quantity} unidades</i>\r\n                            <b>${item.price}</b>\r\n                            <FontAwesomeIcon icon={faTrashAlt}\r\n                              alt=\"Delete item\"\r\n                              className=\"bin\"\r\n                              onClick={() => context.removeItem(item.id)}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                      ))}\r\n                      <span className=\"h2\">Cantidad Items: {getQuantity()}</span>\r\n                      <span className=\"h2\">Total: ${getTotal()}</span>\r\n                    </div>\r\n                    <Form setBuyerInfo={setBuyerInfo} />\r\n                  </div>\r\n                )}\r\n                <div className={`modal ${modal ? 'active' : ''}`}>\r\n                  <div className=\"modal-overlay\" onClick={() => setModal(false)}></div>\r\n                  <div className=\"modal-container\">\r\n                    <div className=\"modal-body\">\r\n                      <h3>ID de su compra: </h3>\r\n                      <p className=\"text-primary h3\">{orderId}</p>\r\n                      <button className=\"btn btn-primary\" onClick={() => setModal(false)}>\r\n                        Cerrar\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          };\r\n          \r\nexport default Cart;\r\n\r\n*/","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Firebase\\index.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\Context\\CartContext.js",["125","126"],"import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const Context = React.createContext([]);\r\n\r\nconst CartContext = (props) => {\r\n\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n    return (\r\n        <Context.Provider value={[selectedItems, setSelectedItems]}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default CartContext;","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Loading\\Loading.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Modal\\CartModal.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\CartContainer\\CartContainer.js",["127","128","129"],"import React, { useContext, useState, useEffect} from 'react';\r\nimport Cart from '../Cart/Cart'\r\n\r\n\r\nconst CartContainer = () => {\r\n     \r\n    return (\r\n      <Cart />\r\n       );\r\n  };\r\n\r\nexport default CartContainer;","C:\\Iara\\ecommerse-coderhouse\\src\\Components\\Button\\AddButton.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\HomeContainer\\HomeContainer.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\HomeContainer\\Home.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\MainImg\\MainImg.js",[],"C:\\Iara\\ecommerse-coderhouse\\src\\Components\\ShopContainer\\ShopContainer.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":12},{"ruleId":"134","severity":1,"message":"138","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":18},{"ruleId":"134","severity":1,"message":"139","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":18},{"ruleId":"134","severity":1,"message":"140","line":11,"column":9,"nodeType":"136","messageId":"137","endLine":11,"endColumn":21},{"ruleId":"134","severity":1,"message":"141","line":12,"column":8,"nodeType":"136","messageId":"137","endLine":12,"endColumn":18},{"ruleId":"134","severity":1,"message":"142","line":5,"column":7,"nodeType":"136","messageId":"137","endLine":5,"endColumn":12},{"ruleId":"134","severity":1,"message":"143","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":19},{"ruleId":"134","severity":1,"message":"144","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":22,"column":7,"nodeType":"147","endLine":22,"endColumn":40},{"ruleId":"130","replacedBy":"148"},{"ruleId":"132","replacedBy":"149"},{"ruleId":"134","severity":1,"message":"150","line":1,"column":16,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"138","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"151","line":1,"column":38,"nodeType":"136","messageId":"137","endLine":1,"endColumn":47},{"ruleId":"134","severity":1,"message":"144","line":2,"column":9,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"143","line":2,"column":15,"nodeType":"136","messageId":"137","endLine":2,"endColumn":24},{"ruleId":"145","severity":1,"message":"152","line":15,"column":12,"nodeType":"147","endLine":15,"endColumn":31},{"ruleId":"134","severity":1,"message":"151","line":1,"column":26,"nodeType":"136","messageId":"137","endLine":1,"endColumn":35},{"ruleId":"134","severity":1,"message":"153","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":25},{"ruleId":"134","severity":1,"message":"154","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":20},{"ruleId":"134","severity":1,"message":"155","line":14,"column":25,"nodeType":"136","messageId":"137","endLine":14,"endColumn":41},{"ruleId":"134","severity":1,"message":"156","line":16,"column":10,"nodeType":"136","messageId":"137","endLine":16,"endColumn":17},{"ruleId":"134","severity":1,"message":"157","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":30},{"ruleId":"134","severity":1,"message":"151","line":1,"column":42,"nodeType":"136","messageId":"137","endLine":1,"endColumn":51},{"ruleId":"134","severity":1,"message":"150","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":27},{"ruleId":"134","severity":1,"message":"138","line":1,"column":29,"nodeType":"136","messageId":"137","endLine":1,"endColumn":37},{"ruleId":"134","severity":1,"message":"151","line":1,"column":39,"nodeType":"136","messageId":"137","endLine":1,"endColumn":48},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Fragment' is defined but never used.","'CartProvider' is defined but never used.","'CartWidget' is defined but never used.","'items' is assigned a value but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["158"],["159"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FontAwesomeIcon' is defined but never used.","'faTrashAlt' is defined but never used.","'setSelectedItems' is assigned a value but never used.","'loading' is assigned a value but never used.","'createContext' is defined but never used.","no-global-assign","no-unsafe-negation"]